OVERVIEW
=======================
Goal: Create an application that will return how frequently a user submitted word appears in a user submitted sentence.

For example:
    INPUT word: "Cheese"
    INPUT sentence: "I'm a Vermonter, so obviously I have strong feelings about cheese."

    OUTPUT: Your word appeared 1 time in your sentence.


SPECS - WHAT
=======================
1. A user submits a word with a single character and a sentence with a single character. Program outputs that word was found once in sentence.

    WHY: A single character matching another single character is the simplest to search for.

    INPUT word: 'A'
    INPUT sentence: 'A'

    OUTPUT: 1

2. A user submits a word with a single character and a sentence with a single character, but that word is not found in the sentence.

    WHY: After finding match, the next simplest step would be to return false if a single character and a single character did not match.

    INPUT word: 't'
    INPUT sentence: 'x'

    OUTPUT: 0.

3. A user submits a word with two or more characters and a sentence with two or more characters and that word is found in the sentence.

    WHY: Dealing with multiple character matching is the next simplest step.

    INPUT word: "so"
    INPUT sentence: "so"

    OUTPUT: 1

5. A user submits a multiple character word and a sentence with two or more words and that word is found in the sentence.

    WHY: Next simplest step because input word must be checked not only against one word, but two words.

    INPT word: "okay"
    INPUT word: "be okay"

    OUTPUT: 1

6. A user submits a multiple character word and a sentence with two or more words and that word is not found in the sentence.

    WHY: Next simplest step because input word must be checked not only against one word, but two words AND take into account them not matching.

    INPUT word: "burlington"
    INPUT sentence: "portland is a lot like burlington"
    OUTPUT: 1

7. A user submits a multiple character word and a sentence with two or more words and the word is found multiple times in the sentence.

    WHY: After checking word against multiple words in sentence, the next easiest step would be to return multiple matches of that word.

    INPUT word: "at"
    INPUT sentence: "when i was at the store at eight last night"

    OUTPUT: 2

8. A user submits a word with CAPS on but a sentence with CAPS off. The program is still able to search and find their word.

    WHY: Program is now fully functioning, so we must now take into account human error.

    INPUT word: CRAZY
    INPUT sentence: "Hopefully this assessment won't make me go crazy"

    OUTPUT: 1



SPECS - HOW
=======================
Beginnning ideas for outlining project:

Take user input word as 1 string and take user input sentence as another string.

Use explode function to break apart input sentence into separate words stored in an array.

Use in_array function to search array of now seperate words against input word string.
